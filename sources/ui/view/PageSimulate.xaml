<UserControl x:Class="FFTriadBuddy.UI.PageSimulate"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FFTriadBuddy.UI"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=local:PageSimulateViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="215" d:DesignWidth="525">
    <UserControl.Resources>
        <SolidColorBrush x:Key="brushBoard" Color="#FFFAEBD7"/>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Margin="10,0,0,0" Grid.Row="1" VerticalAlignment="Top" Orientation="Horizontal" Grid.Column="1" Grid.ColumnSpan="2">
                <TextBlock TextWrapping="Wrap" Text="{Binding MainForm_Simulate_RuleList}"/>
                <TextBlock TextWrapping="Wrap" Text="{Binding DescRules}" Margin="5,0,0,0"/>
            </StackPanel>
            <Button Content="{Binding DescUndoButton}" Command="{Binding CommandRedUndo}" Margin="5,10,10,10" Grid.Row="2" Grid.Column="2"/>
            <Button Content="{Binding MainForm_Simulate_ResetButton}" Command="{Binding CommandReset}" Visibility="{Binding CanStartWithBlue, Converter={StaticResource convInvis}}" Margin="10,10,5,10" Grid.Row="2" Grid.Column="1"/>
            <Button Content="{Binding MainForm_Dynamic_Simulate_BlueStartButton}" Command="{Binding CommandBlueFirst}" Visibility="{Binding CanStartWithBlue, Converter={StaticResource convVis}}" Margin="10,10,5,10" Grid.Row="2" Grid.Column="1"/>
            <TabControl Margin="10" Style="{StaticResource tabControlSwitcher}" Background="{StaticResource brushBoard}" BorderThickness="1" BorderBrush="{StaticResource brushBorder}" SelectedIndex="{Binding SpecialRuleSwitcherBoardIdx, Mode=OneWay}">
                <TabItem>
                    <Viewbox>
                        <ItemsControl ItemsSource="{Binding BoardCards}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Grid.Column" Value="{Binding BoardX}"/>
                                    <Setter Property="Grid.Row" Value="{Binding BoardY}"/>
                                    <Setter Property="local:CardDragDropExtension.IsDragDestination" Value="True"/>
                                    <Setter Property="local:CardDragDropExtension.CardContainer" Value="{Binding Card.OwnerObject}"/>
                                    <Setter Property="local:CardDragDropExtension.CardContext" Value="{Binding Card}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Margin="2" BorderBrush="{StaticResource brushBorder}" BorderThickness="1" Background="WhiteSmoke" MinHeight="100" MinWidth="100">
                                        <local:CardView DataContext="{Binding Card}" IsBlinkingOnHighlight="True"/>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Viewbox>
                </TabItem>
                <TabItem>
                    <TextBlock Text="{Binding MainForm_Simulate_Game_SpecialRule}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" FontWeight="Bold"/>
                </TabItem>
            </TabControl>
            <TabControl Margin="10" Style="{StaticResource tabControlSwitcher}" Grid.Column="1" Grid.ColumnSpan="2" SelectedIndex="{Binding SpecialRuleSwitcherIdx, Mode=OneWay}">
                <TabItem>
                    <Border Background="#FFFFE4E1" BorderBrush="{StaticResource brushBorder}" BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding MainForm_Simulate_Game_KnownCards}" VerticalAlignment="Top" Margin="2"/>
                            <TextBlock Text="{Binding DescUnknownCards}" Grid.Row="2" VerticalAlignment="Top" Margin="2" Visibility="{Binding HasUnknownCards, Converter={StaticResource convVis}}"/>
                            <Border Grid.Row="4" Margin="0,2,0,0">
                                <Border.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="Background" Value="#FFFFC1BA"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasGameHint}" Value="True">
                                                <Setter Property="Background" Value="#FFCE1500"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasGameHint}" Value="True">
                                                <Setter Property="Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Resources>
                                <TextBlock Text="{Binding DescGameHint}" HorizontalAlignment="Center"/>
                            </Border>
                            <local:DeckView DataContext="{Binding RedKnownCards}" Grid.Row="1" Width="Auto" Height="Auto" CanReorderCards="True"/>
                            <local:DeckView DataContext="{Binding RedUnknownCards}" Grid.Row="3" Width="Auto" Height="Auto" CanReorderCards="True" Visibility="{Binding DataContext.HasUnknownCards, Converter={StaticResource convVis}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PageSimulate}}}"/>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem>
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="show2" TargetType="{x:Type FrameworkElement}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SpecialRules.NumRouletteChoices}" Value="1">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="show3" TargetType="{x:Type FrameworkElement}" BasedOn="{StaticResource show2}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SpecialRules.NumRouletteChoices}" Value="2">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="show4" TargetType="{x:Type FrameworkElement}" BasedOn="{StaticResource show3}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SpecialRules.NumRouletteChoices}" Value="3">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding MainForm_Simulate_Roulette_Rule1}" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="1" Text="{Binding MainForm_Simulate_Roulette_Rule2}" VerticalAlignment="Center" Style="{StaticResource show2}"/>
                        <TextBlock Grid.Row="2" Text="{Binding MainForm_Simulate_Roulette_Rule3}" VerticalAlignment="Center" Style="{StaticResource show3}"/>
                        <TextBlock Grid.Row="3" Text="{Binding MainForm_Simulate_Roulette_Rule4}" VerticalAlignment="Center" Style="{StaticResource show4}"/>
                        <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding SpecialRules.Rules}" DisplayMemberPath="NameLocalized" SelectedItem="{Binding SpecialRules.Roulette1}" Margin="5,2,0,2"/>
                        <ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding SpecialRules.Rules}" DisplayMemberPath="NameLocalized" SelectedItem="{Binding SpecialRules.Roulette2}" Margin="5,2,0,2" Style="{StaticResource show2}"/>
                        <ComboBox Grid.Column="1" Grid.Row="2" ItemsSource="{Binding SpecialRules.Rules}" DisplayMemberPath="NameLocalized" SelectedItem="{Binding SpecialRules.Roulette3}" Margin="5,2,0,2" Style="{StaticResource show3}"/>
                        <ComboBox Grid.Column="1" Grid.Row="3" ItemsSource="{Binding SpecialRules.Rules}" DisplayMemberPath="NameLocalized" SelectedItem="{Binding SpecialRules.Roulette4}" Margin="5,2,0,2" Style="{StaticResource show4}"/>
                        <Button Grid.Row="5" Grid.ColumnSpan="2" Content="{Binding MainForm_Simulate_Game_ApplyRuleButton}" Background="{StaticResource brushBoard}" Command="{Binding SpecialRules.CommandApply}"/>
                    </Grid>
                </TabItem>
                <TabItem>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding MainForm_Simulate_Random_Info}"/>
                        <local:DeckView DataContext="{Binding SpecialRules.OverrideBlueDeck}" Grid.Row="1" Margin="10,10,10,10" Width="Auto" Height="Auto" CanPickCards="True" CanReorderCards="True" />
                        <Button Grid.Row="2" Content="{Binding MainForm_Simulate_Game_ApplyRuleButton}" Background="{StaticResource brushBoard}" Command="{Binding SpecialRules.CommandApply}"/>
                    </Grid>
                </TabItem>
                <TabItem>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding MainForm_Dynamic_Simulate_SwapRuleButton}"/>
                        <local:DeckView DataContext="{Binding SpecialRules.OverrideBlueDeck}" Grid.Row="1" Margin="10,10,10,5" Width="Auto" Height="Auto" />
                        <local:DeckView DataContext="{Binding SpecialRules.OverrideRedDeck}" Grid.Row="2" Margin="10,5,10,10" Width="Auto" Height="Auto" />
                        <Button Grid.Row="3" Content="{Binding MainForm_Simulate_Game_ApplyRuleButton}" Background="{StaticResource brushBoard}" Command="{Binding SpecialRules.CommandApply}"/>
                    </Grid>
                </TabItem>
                <TabItem>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="4*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.ColumnSpan="3" Text="{Binding MainForm_Simulate_Open_Hint}"/>
                        <local:DeckView DataContext="{Binding SpecialRules.OverrideRedDeck}"  Grid.Row="1" Grid.ColumnSpan="3" Margin="10,10,10,5" Width="Auto" Height="Auto" />
                        <Button Grid.Row="2" Content="{Binding MainForm_Simulate_Game_SkipRuleButton}" Background="{StaticResource brushBoard}" Command="{Binding SpecialRules.CommandSkip}"/>
                        <Button Grid.Column="2" Grid.Row="2" Content="{Binding MainForm_Simulate_Game_ApplyRuleButton}" Background="{StaticResource brushBoard}" Command="{Binding SpecialRules.CommandApply}"/>
                    </Grid>
                </TabItem>
                <TabItem>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding MainForm_Simulate_Debug_Info}"/>
                        <CheckBox Grid.Row="2" Content="{Binding MainForm_Simulate_Debug_ForceCached}" IsChecked="{Binding SpecialRules.DebugForceCached}"/>
                        <Button Grid.Row="4" Content="{Binding MainForm_Simulate_Game_ApplyRuleButton}" Background="{StaticResource brushBoard}" Command="{Binding SpecialRules.CommandApply}"/>
                    </Grid>
                </TabItem>
            </TabControl>
            <Grid Grid.Row="1" Grid.RowSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Margin="10,0,0,0" Grid.Row="0" VerticalAlignment="Top" Orientation="Horizontal">
                    <TextBlock Text="{Binding MainForm_Simulate_WinChance}"/>
                    <TextBlock Text="{Binding DescChanceAndResult}" Margin="5,0,0,0"/>
                </StackPanel>
                <TextBlock Text="{Binding MainForm_Dynamic_Simulate_ChangeBlueHint}" Margin="10,0,0,10" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Visibility="{Binding CanSelectBlue, Converter={StaticResource convVis}}"/>
                <Rectangle x:Name="rectPlayerDeckSlot" Fill="Transparent" Margin="10,0,10,10" Grid.RowSpan="2" Grid.Column="1" IsHitTestVisible="False" LayoutUpdated="rectPlayerDeckSlot_LayoutUpdated"/>
            </Grid>
        </Grid>
        <local:PlayerDeckPreview x:Name="playerDeck" DataContext="{Binding PlayerDeck}" Background="#FFE0FCFF" BorderBrush="{StaticResource brushBorder}" BorderThickness="1" Width="10" Height="10" VerticalAlignment="Top" HorizontalAlignment="Left"/>
    </Grid>
</UserControl>
